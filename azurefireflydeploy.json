{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "westus2",
      "metadata": { "description": "Resources location" }
    },
    "servicePrincipalObjectId": {
      "type": "String",
      "metadata": { "description": "Service principal Object Id, needed for Role Assignment" }
    },
    "servicePrincipalClientId": {
      "type": "String",
      "metadata": { "description": "Service principal Client Id" }
    },
    "servicePrincipalClientSecret": {
      "type": "securestring",
      "metadata": { "description": "Service principal client secret" }
    },
    "fireflyAccessKey": {
      "type": "securestring",
      "metadata": { "description": "Firefly access key" }
    },
    "fireflySecretKey": {
      "type": "securestring",
      "metadata": { "description": "Firefly secret key" }
    },
    "targetSubscriptions": {
      "type": "array",
      "defaultValue": ["[subscription().subscriptionId]"],
      "metadata": { "description": "Array of subscription IDs to deploy Firefly monitoring to" }
    },
    "isMultiSubscription": {
      "type": "bool",
      "defaultValue": false,
      "metadata": { "description": "Whether this is a multi-subscription deployment" }
    },
    "eventDrivenEnabled": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "Enable event-driven monitoring for this subscription" }
    },
    "fireflyWebhookUrl": {
      "type": "string",
      "defaultValue": "https://azureevents-env2.dev.firefly.ai",
      "metadata": { "description": "Firefly webhook URL for event notifications" }
    },
    "enforceStorageNetworkRules": {
      "type": "bool",
      "defaultValue": false,
      "metadata": { "description": "Enforce storage network rules to restrict access to Firefly IPs only" }
    },
    "fireflyEips": {
      "type": "array",
      "defaultValue": [
        "3.224.145.192",
        "54.83.245.177",
        "3.213.167.195",
        "54.146.252.237",
        "34.226.97.113"
      ],
      "metadata": { "description": "Firefly IP addresses for storage account network rules" }
    },
    "tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": { "description": "Tags to apply to created resources" }
    },
    "createResourceProviderRegistration": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "Create microsoft.insights resource provider registration" }
    },
    "isProd": {
      "type": "bool",
      "defaultValue": false,
      "metadata": { "description": "Is this a production environment" }
    },
    "directoryDomain": {
      "type": "string",
      "defaultValue": "firefly.ai",
      "metadata": { "description": "Directory domain for Firefly integration" }
    },
    "newguid": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "metadata": {
          "description": "Just a Guid to append to deployment script name"
      }
    }
  },
  "variables": {
    "mergedTags": "[union(parameters('tags'), createObject('firefly', 'true'))]",
    "effectiveSubscriptions": "[if(parameters('isMultiSubscription'), parameters('targetSubscriptions'), createArray(subscription().subscriptionId))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[concat('firefly-monitoring-', variables('effectiveSubscriptions')[copyIndex()])]",
      "location": "[parameters('location')]",
      "tags": "[variables('mergedTags')]",
      "properties": {},
      "copy": {
        "name": "resourceGroupLoop",
        "count": "[length(variables('effectiveSubscriptions'))]"
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "[concat('firefly-deployment-', copyIndex(), '-', parameters('newguid'))]",
      "location": "[parameters('location')]",
      "subscriptionId": "[variables('effectiveSubscriptions')[copyIndex()]]",
      "dependsOn": [
        "[concat('firefly-monitoring-', variables('effectiveSubscriptions')[copyIndex()])]"
      ],
      "copy": {
        "name": "deploymentLoop",
        "count": "[length(variables('effectiveSubscriptions'))]"
      },
      "properties": {
        "mode": "Incremental",
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "parameters": {
          "mergedTags": { "value": "[variables('mergedTags')]" },
          "uniqueStorageAccountName": { "value": "[concat('firefly', uniqueString(variables('effectiveSubscriptions')[copyIndex()]))]" },
          "uniqueEventGridTopicName": { "value": "[concat('firefly-events-', substring(variables('effectiveSubscriptions')[copyIndex()], 0, 8), '-', parameters('newguid'))]" },
          "uniqueCustomRoleName": { "value": "[concat('Firefly-', uniqueString(variables('effectiveSubscriptions')[copyIndex()]))]" },
          "targetSubscriptionId": { "value": "[variables('effectiveSubscriptions')[copyIndex()]]" },
          "servicePrincipalObjectId": { "value": "[parameters('servicePrincipalObjectId')]" },
          "servicePrincipalClientId": { "value": "[parameters('servicePrincipalClientId')]" },
          "servicePrincipalClientSecret": { "value": "[parameters('servicePrincipalClientSecret')]" },
          "fireflyAccessKey": { "value": "[parameters('fireflyAccessKey')]" },
          "fireflySecretKey": { "value": "[parameters('fireflySecretKey')]" },
          "eventDrivenEnabled": { "value": "[parameters('eventDrivenEnabled')]" },
          "fireflyWebhookUrl": { "value": "[parameters('fireflyWebhookUrl')]" },
          "enforceStorageNetworkRules": { "value": "[parameters('enforceStorageNetworkRules')]" },
          "fireflyEips": { "value": "[parameters('fireflyEips')]" },
          "isProd": { "value": "[parameters('isProd')]" },
          "directoryDomain": { "value": "[parameters('directoryDomain')]" },
          "newguid": { "value": "[parameters('newguid')]" },
          "location": { "value": "[parameters('location')]" }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "mergedTags": { "type": "object" },
            "uniqueStorageAccountName": { "type": "string" },
            "uniqueEventGridTopicName": { "type": "string" },
            "uniqueCustomRoleName": { "type": "string" },
            "targetSubscriptionId": { "type": "string" },
            "servicePrincipalObjectId": { "type": "string" },
            "servicePrincipalClientId": { "type": "string" },
            "servicePrincipalClientSecret": { "type": "securestring" },
            "fireflyAccessKey": { "type": "securestring" },
            "fireflySecretKey": { "type": "securestring" },
            "eventDrivenEnabled": { "type": "bool" },
            "fireflyWebhookUrl": { "type": "string" },
            "enforceStorageNetworkRules": { "type": "bool" },
            "fireflyEips": { "type": "array" },
            "isProd": { "type": "bool" },
            "directoryDomain": { "type": "string" },
            "newguid": { "type": "string" },
            "location": { "type": "string" }
          },
          "variables": {
            "resourceGroupName": "[concat('firefly-monitoring-', parameters('targetSubscriptionId'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Resources/resourceGroups",
              "apiVersion": "2021-04-01",
              "name": "[variables('resourceGroupName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('mergedTags')]",
              "properties": {}
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2021-04-01",
              "name": "[concat('firefly-roles-', parameters('newguid'))]",
              "location": "[parameters('location')]",
              "subscriptionId": "[parameters('targetSubscriptionId')]",
              "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "parameters": {
                  "customRoleName": {
                    "value": "[parameters('uniqueCustomRoleName')]"
                  },
                  "servicePrincipalObjectId": {
                    "value": "[parameters('servicePrincipalObjectId')]"
                  },
                  "targetSubscriptionId": {
                    "value": "[parameters('targetSubscriptionId')]"
                  },
                  "newguid": {
                    "value": "[parameters('newguid')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "customRoleName": { "type": "string" },
                    "servicePrincipalObjectId": { "type": "string" },
                    "targetSubscriptionId": { "type": "string" },
                    "newguid": { "type": "string" }
                  },
                  "variables": {},
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleDefinitions",
                      "apiVersion": "2022-04-01",
                      "name": "[guid('fireflyCustomRole', subscription().subscriptionId)]",
                      "properties": {
                        "roleName": "[parameters('customRoleName')]",
                        "description": "Firefly's requested permissions",
                        "type": "customRole",
                        "permissions": [
                          {
                            "actions": [
                              "Microsoft.Storage/storageAccounts/listkeys/action",
                              "Microsoft.DocumentDB/databaseAccounts/listConnectionStrings/action",
                              "Microsoft.DocumentDB/databaseAccounts/listKeys/action",
                              "Microsoft.DocumentDB/databaseAccounts/readonlykeys/action",
                              "Microsoft.ContainerService/managedClusters/listClusterUserCredential/action",
                              "Microsoft.Web/sites/config/list/Action",
                              "Microsoft.Cache/redis/listKeys/action",
                              "Microsoft.AppConfiguration/configurationStores/ListKeys/action",
                              "Microsoft.Search/searchServices/listQueryKeys/action",
                              "Microsoft.Search/searchServices/listAdminKeys/action",
                              "Microsoft.Authorization/roleAssignments/read",
                              "Microsoft.OperationalInsights/workspaces/sharedkeys/action"
                            ],
                            "notActions": [],
                            "dataActions": [],
                            "notDataActions": []
                          }
                        ],
                        "assignableScopes": [
                          "[concat('/subscriptions/', subscription().subscriptionId)]"
                        ]
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/roleDefinitions",
                      "apiVersion": "2022-04-01",
                      "name": "[guid('fireflyStorageBlobReader', subscription().subscriptionId)]",
                      "properties": {
                        "roleName": "[concat('Firefly-StorageBlobReader-', uniqueString(subscription().subscriptionId))]",
                        "description": "Firefly's storage blob read permissions",
                        "type": "customRole",
                        "permissions": [
                          {
                            "actions": [],
                            "notActions": [],
                            "dataActions": [
                              "Microsoft.Storage/storageAccounts/blobServices/containers/blobs/read"
                            ],
                            "notDataActions": []
                          }
                        ],
                        "assignableScopes": [
                          "[concat('/subscriptions/', subscription().subscriptionId)]"
                        ]
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(parameters('servicePrincipalObjectId'), 'StorageBlobDataReaderConditional', subscription().subscriptionId, parameters('newguid'))]",
                      "properties": {
                        "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '2a2b9908-6ea1-4ae2-8e65-a410df84e7d1')]",
                        "principalId": "[parameters('servicePrincipalObjectId')]",
                        "principalType": "ServicePrincipal",
                        "conditionVersion": "2.0",
                        "condition": "((!(ActionMatches{'Microsoft.Storage/storageAccounts/blobServices/containers/blobs/read'} AND NOT SubOperationMatches{'Blob.List'})) OR (@Resource[Microsoft.Storage/storageAccounts/blobServices/containers/blobs:path] StringLike '*state') OR (@Resource[Microsoft.Storage/storageAccounts/blobServices/containers/blobs:path] StringLike '*.tfstateenv:*'))"
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2020-10-01-preview",
                      "name": "[guid(concat('/subscriptions/', subscription().subscriptionId), 'firefly reader', parameters('servicePrincipalObjectId'), parameters('newguid'))]",
                      "properties": {
                        "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
                        "principalId": "[parameters('servicePrincipalObjectId')]",
                        "principalType": "ServicePrincipal"
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2020-10-01-preview",
                      "name": "[guid(concat('/subscriptions/', subscription().subscriptionId), 'firefly billing reader', parameters('servicePrincipalObjectId'), parameters('newguid'))]",
                      "properties": {
                        "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'fa23ad8b-c56e-40d8-ac0c-ce449e1d2c64')]",
                        "principalId": "[parameters('servicePrincipalObjectId')]",
                        "principalType": "ServicePrincipal"
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2020-10-01-preview",
                      "name": "[guid(concat('/subscriptions/', subscription().subscriptionId), 'firefly app config reader', parameters('servicePrincipalObjectId'), parameters('newguid'))]",
                      "properties": {
                        "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '516239f1-63e1-4d78-a4de-a74fb236a071')]",
                        "principalId": "[parameters('servicePrincipalObjectId')]",
                        "principalType": "ServicePrincipal"
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2020-10-01-preview",
                      "name": "[guid(concat('/subscriptions/', subscription().subscriptionId), 'firefly security reader', parameters('servicePrincipalObjectId'), parameters('newguid'))]",
                      "properties": {
                        "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '39bc4728-0917-49c7-9d2c-d95423bc2eb4')]",
                        "principalId": "[parameters('servicePrincipalObjectId')]",
                        "principalType": "ServicePrincipal"
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2020-10-01-preview",
                      "name": "[guid('firefly custom role deployment subscription', subscription().subscriptionId, parameters('servicePrincipalObjectId'), parameters('newguid'))]",
                      "properties": {
                        "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', guid('fireflyCustomRole', subscription().subscriptionId))]",
                        "principalId": "[parameters('servicePrincipalObjectId')]",
                        "principalType": "ServicePrincipal"
                      },
                      "dependsOn": [
                        "[guid('fireflyCustomRole', subscription().subscriptionId)]"
                      ]
                    }
                  ]
                }
              }
            },
            {
              "condition": "[parameters('eventDrivenEnabled')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2021-04-01",
              "name": "[concat('firefly-resources-', parameters('newguid'))]",
              "resourceGroup": "[variables('resourceGroupName')]",
              "dependsOn": [
                "[variables('resourceGroupName')]",
                "[concat('firefly-roles-', parameters('newguid'))]"
              ],
              "properties": {
                "mode": "Incremental",
                "parameters": {
                  "uniqueStorageAccountName": { "value": "[parameters('uniqueStorageAccountName')]" },
                  "servicePrincipalObjectId": { "value": "[parameters('servicePrincipalObjectId')]" },
                  "targetSubscriptionId": { "value": "[parameters('targetSubscriptionId')]" },
                  "newguid": { "value": "[parameters('newguid')]" },
                  "mergedTags": { "value": "[parameters('mergedTags')]" },
                  "enforceStorageNetworkRules": { "value": "[parameters('enforceStorageNetworkRules')]" },
                  "fireflyEips": { "value": "[parameters('fireflyEips')]" },
                  "location": { "value": "[parameters('location')]" },
                  "uniqueEventGridTopicName": { "value": "[parameters('uniqueEventGridTopicName')]" },
                  "fireflyWebhookUrl": { "value": "[parameters('fireflyWebhookUrl')]" },
                  "eventDrivenEnabled": { "value": "[parameters('eventDrivenEnabled')]" },
                  "resourceGroupName": { "value": "[variables('resourceGroupName')]" }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "uniqueStorageAccountName": { "type": "string" },
                    "servicePrincipalObjectId": { "type": "string" },
                    "targetSubscriptionId": { "type": "string" },
                    "newguid": { "type": "string" },
                    "mergedTags": { "type": "object" },
                    "enforceStorageNetworkRules": { "type": "bool" },
                    "fireflyEips": { "type": "array" },
                    "location": { "type": "string" },
                    "uniqueEventGridTopicName": { "type": "string" },
                    "fireflyWebhookUrl": { "type": "string" },
                    "eventDrivenEnabled": { "type": "bool" },
                    "resourceGroupName": { "type": "string" }
                  },
                  "variables": {},
                  "resources": [
                    {
                      "type": "Microsoft.Storage/storageAccounts",
                      "apiVersion": "2021-09-01",
                      "name": "[parameters('uniqueStorageAccountName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('mergedTags')]",
                      "sku": {
                        "name": "Standard_LRS"
                      },
                      "kind": "StorageV2",
                      "properties": {
                        "accessTier": "Hot",
                        "allowBlobPublicAccess": true,
                        "crossTenantReplicationEnabled": false,
                        "minimumTlsVersion": "TLS1_2",
                        "networkAcls": "[if(parameters('enforceStorageNetworkRules'), createObject('defaultAction', 'Deny', 'ipRules', map(parameters('fireflyEips'), lambda('ip', createObject('value', lambdaVariables('ip'), 'action', 'Allow')))), createObject('defaultAction', 'Allow'))]"
                      }
                    },
                    {
                      "type": "Microsoft.EventGrid/systemTopics",
                      "apiVersion": "2021-12-01",
                      "name": "[parameters('uniqueEventGridTopicName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('mergedTags')]",
                      "properties": {
                        "source": "[concat('/subscriptions/', parameters('targetSubscriptionId'), '/resourceGroups/firefly-monitoring-', parameters('targetSubscriptionId'), '/providers/Microsoft.Storage/storageAccounts/', parameters('uniqueStorageAccountName'))]",
                        "topicType": "microsoft.storage.storageaccounts"
                      },
                      "dependsOn": [
                        "[parameters('uniqueStorageAccountName')]"
                      ]
                    },
                    {
                      "type": "Microsoft.EventGrid/systemTopics/eventSubscriptions",
                      "apiVersion": "2021-12-01",
                      "name": "[concat(parameters('uniqueEventGridTopicName'), '/firefly-webhook')]",
                      "dependsOn": [
                        "[parameters('uniqueEventGridTopicName')]"
                      ],
                      "properties": {
                        "destination": {
                          "endpointType": "WebHook",
                          "properties": {
                            "endpointUrl": "[parameters('fireflyWebhookUrl')]",
                            "maxEventsPerBatch": 1,
                            "preferredBatchSizeInKilobytes": 64
                          }
                        },
                        "filter": {
                          "includedEventTypes": [
                            "Microsoft.Storage.BlobCreated"
                          ]
                        },
                        "eventDeliverySchema": "EventGridSchema",
                        "retryPolicy": {
                          "maxDeliveryAttempts": 30,
                          "eventTimeToLiveInMinutes": 1440
                        }
                      }
                    }
                  ]
                }
              }
            },
            {
              "condition": "[parameters('eventDrivenEnabled')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2021-04-01",
              "name": "[concat('firefly-storage-roles-', parameters('newguid'))]",
              "resourceGroup": "[variables('resourceGroupName')]",
              "dependsOn": [
                "[concat('firefly-resources-', parameters('newguid'))]",
                "[concat('firefly-roles-', parameters('newguid'))]"
              ],
              "properties": {
                "mode": "Incremental",
                "parameters": {
                  "uniqueStorageAccountName": { "value": "[parameters('uniqueStorageAccountName')]" },
                  "servicePrincipalObjectId": { "value": "[parameters('servicePrincipalObjectId')]" },
                  "targetSubscriptionId": { "value": "[parameters('targetSubscriptionId')]" },
                  "newguid": { "value": "[parameters('newguid')]" }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "uniqueStorageAccountName": { "type": "string" },
                    "servicePrincipalObjectId": { "type": "string" },
                    "targetSubscriptionId": { "type": "string" },
                    "newguid": { "type": "string" }
                  },
                  "variables": {},
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(parameters('servicePrincipalObjectId'), 'StorageBlobDataReader', parameters('uniqueStorageAccountName'), parameters('newguid'))]",
                      "scope": "[resourceId('Microsoft.Storage/storageAccounts', parameters('uniqueStorageAccountName'))]",
                      "properties": {
                        "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '2a2b9908-6ea1-4ae2-8e65-a410df84e7d1')]",
                        "principalId": "[parameters('servicePrincipalObjectId')]",
                        "principalType": "ServicePrincipal"
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(parameters('servicePrincipalObjectId'), 'FireflyStorageBlobReader', parameters('uniqueStorageAccountName'), parameters('newguid'))]",
                      "scope": "[resourceId('Microsoft.Storage/storageAccounts', parameters('uniqueStorageAccountName'))]",
                      "properties": {
                        "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', guid('fireflyStorageBlobReader', subscription().subscriptionId))]",
                        "principalId": "[parameters('servicePrincipalObjectId')]",
                        "principalType": "ServicePrincipal"
                      }
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2021-04-01",
              "name": "[concat('firefly-integration-', parameters('newguid'))]",
              "resourceGroup": "[variables('resourceGroupName')]",
              "dependsOn": [
                "[variables('resourceGroupName')]",
                "[concat('firefly-roles-', parameters('newguid'))]"
              ],
              "properties": {
                "mode": "Incremental",
                "parameters": {
                  "targetSubscriptionId": { "value": "[parameters('targetSubscriptionId')]" },
                  "servicePrincipalClientId": { "value": "[parameters('servicePrincipalClientId')]" },
                  "servicePrincipalClientSecret": { "value": "[parameters('servicePrincipalClientSecret')]" },
                  "fireflyAccessKey": { "value": "[parameters('fireflyAccessKey')]" },
                  "fireflySecretKey": { "value": "[parameters('fireflySecretKey')]" },
                  "isProd": { "value": "[parameters('isProd')]" },
                  "directoryDomain": { "value": "[parameters('directoryDomain')]" },
                  "eventDrivenEnabled": { "value": "[parameters('eventDrivenEnabled')]" },
                  "newguid": { "value": "[parameters('newguid')]" },
                  "location": { "value": "[parameters('location')]" }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "targetSubscriptionId": { "type": "string" },
                    "servicePrincipalClientId": { "type": "string" },
                    "servicePrincipalClientSecret": { "type": "securestring" },
                    "fireflyAccessKey": { "type": "securestring" },
                    "fireflySecretKey": { "type": "securestring" },
                    "isProd": { "type": "bool" },
                    "directoryDomain": { "type": "string" },
                    "eventDrivenEnabled": { "type": "bool" },
                    "newguid": { "type": "string" },
                    "location": { "type": "string" }
                  },
                  "variables": {},
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deploymentScripts",
                      "apiVersion": "2020-10-01",
                      "name": "[concat('firefly-integration-script-', parameters('newguid'))]",
                      "location": "[parameters('location')]",
                      "kind": "AzurePowerShell",
                      "properties": {
                        "retentionInterval": "PT1H",
                        "timeout": "PT5M",
                        "containerSettings": {},
                        "cleanupPreference": "Always",
                        "azPowerShellVersion": "8.1",
                        "environmentVariables": [
                          { "name": "SUBSCRIPTION_ID", "value": "[parameters('targetSubscriptionId')]" },
                          { "name": "CLIENT_ID", "value": "[parameters('servicePrincipalClientId')]" },
                          { "name": "CLIENT_SECRET", "secureValue": "[parameters('servicePrincipalClientSecret')]" },
                          { "name": "FIREFLY_ACCESS_KEY", "secureValue": "[parameters('fireflyAccessKey')]" },
                          { "name": "FIREFLY_SECRET_KEY", "secureValue": "[parameters('fireflySecretKey')]" },
                          { "name": "TENANT_ID", "value": "[subscription().tenantId]" },
                          { "name": "IS_PROD", "value": "[parameters('isProd')]" },
                          { "name": "IS_EVENT_DRIVEN", "value": "[parameters('eventDrivenEnabled')]" },
                          { "name": "IS_AUTO_DISCOVER", "value": "true" },
                          { "name": "DIRECTORY_DOMAIN", "value": "[parameters('directoryDomain')]" }
                        ],
                        "scriptContent": "# Authenticate with Firefly\n$tokenResp = (Invoke-WebRequest -SkipCertificateCheck -ContentType 'application/json' -Method Post -Uri 'https://api-env2.dev.firefly.ai/api/account/access_keys/login' -Body (@{accessKey=$Env:FIREFLY_ACCESS_KEY;secretKey=$Env:FIREFLY_SECRET_KEY}|ConvertTo-Json)).Content | ConvertFrom-Json\n$jwt = $tokenResp.access_token\nif (-not $jwt) {\n    Write-Error 'Auth failed'\n    exit 1\n}\n\n# Login to Azure\n$securePassword = ConvertTo-SecureString $Env:CLIENT_SECRET -AsPlainText -Force\n$credential = New-Object System.Management.Automation.PSCredential($Env:CLIENT_ID, $securePassword)\nConnect-AzAccount -ServicePrincipal -Credential $credential -Tenant $Env:TENANT_ID | Out-Null\n\n$headers = @{\n    'Authorization' = \"Bearer $jwt\"\n    'Content-Type' = 'application/json'\n}\n\n# Get subscription details\ntry {\n    $subscription = Get-AzSubscription -SubscriptionId $Env:SUBSCRIPTION_ID -ErrorAction Stop\n    $subscriptionDisplayName = $subscription.Name\n} catch {\n    Write-Warning \"Could not retrieve subscription details for $Env:SUBSCRIPTION_ID. Using ID as name.\"\n    $subscriptionDisplayName = $Env:SUBSCRIPTION_ID\n}\n\nWrite-Host \"Creating integration for subscription: $subscriptionDisplayName ($Env:SUBSCRIPTION_ID)\"\n\n$bodyObj = [ordered]@{\n    subscriptionId = $Env:SUBSCRIPTION_ID\n    tenantId = $Env:TENANT_ID\n    applicationId = $Env:CLIENT_ID\n    clientSecret = $Env:CLIENT_SECRET\n    name = $subscriptionDisplayName\n    directoryDomain = $Env:DIRECTORY_DOMAIN\n    isProd = [bool]::Parse($Env:IS_PROD)\n    isEventDriven = [bool]::Parse($Env:IS_EVENT_DRIVEN)\n    isAutoDiscover = [bool]::Parse($Env:IS_AUTO_DISCOVER)\n    isIacAutoDiscoveryDisabled = $false\n}\n\n$body = $bodyObj | ConvertTo-Json -Compress\n\ntry {\n    $intResp = Invoke-WebRequest -UseBasicParsing -SkipCertificateCheck -Method Post -Uri 'https://api-env2.dev.firefly.ai/api/integrations/azure?onConflictUpdate=true' -Headers $headers -Body $body\n    \n    if ($intResp.StatusCode -eq 200 -or $intResp.StatusCode -eq 201) {\n        Write-Host \"Successfully created integration for subscription $subscriptionDisplayName\"\n    } else {\n        Write-Warning \"Unexpected status code $($intResp.StatusCode) for subscription $subscriptionDisplayName\"\n        exit 1\n    }\n} catch {\n    Write-Warning \"Failed to create integration for subscription $subscriptionDisplayName : $($_.Exception.Message)\"\n    \n    if ($_.Exception.Response) {\n        $reader = New-Object System.IO.StreamReader($_.Exception.Response.GetResponseStream())\n        $reader.BaseStream.Position = 0\n        $reader.DiscardBufferedData()\n        $responseBody = $reader.ReadToEnd()\n        Write-Host \"Response body: $responseBody\"\n    }\n    \n    exit 1\n}\n\nWrite-Host \"Integration process completed successfully\""
                      }
                    }
                  ]
                }
              }
            },
            {
              "condition": "[parameters('eventDrivenEnabled')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2021-04-01",
              "name": "[concat('firefly-diag-settings-', parameters('newguid'))]",
              "location": "[parameters('location')]",
              "subscriptionId": "[parameters('targetSubscriptionId')]",
              "dependsOn": [
                "[concat('firefly-resources-', parameters('newguid'))]"
              ],
              "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "parameters": {
                  "storageAccountId": {
                      "value": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', variables('resourceGroupName'), '/providers/Microsoft.Storage/storageAccounts/', parameters('uniqueStorageAccountName'))]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                      "storageAccountId": {
                          "type": "string"
                      }
                  },
                  "variables": {},
                  "resources": [
                    {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "apiVersion": "2021-05-01-preview",
                      "name": "[concat('firefly-diag-', subscription().subscriptionId)]",
                      "properties": {
                        "storageAccountId": "[parameters('storageAccountId')]",
                        "logs": [
                          {
                            "category": "Administrative",
                            "enabled": true,
                            "retentionPolicy": {
                              "enabled": false,
                              "days": 0
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "outputs": {}
                }
              }
            }

          ],
          "outputs": {
            "subscriptionId": {
              "type": "string",
              "value": "[parameters('targetSubscriptionId')]"
            },
            "storageAccountName": {
              "condition": "[parameters('eventDrivenEnabled')]",
              "type": "string",
              "value": "[if(parameters('eventDrivenEnabled'), parameters('uniqueStorageAccountName'), '')]"
            },
            "eventGridTopicName": {
              "condition": "[parameters('eventDrivenEnabled')]",
              "type": "string",
              "value": "[if(parameters('eventDrivenEnabled'), parameters('uniqueEventGridTopicName'), '')]"
            }
          }
        }
      }
    }
  ],
  "outputs": {
    "deploymentSummary": {
      "type": "object",
      "value": {
        "subscriptionsMonitored": "[variables('effectiveSubscriptions')]",
        "totalSubscriptions": "[length(variables('effectiveSubscriptions'))]",
        "isMultiSubscription": "[parameters('isMultiSubscription')]",
        "eventDrivenEnabled": "[parameters('eventDrivenEnabled')]",
        "deploymentMethod": "[if(parameters('isMultiSubscription'), 'Multi-Subscription', 'Single-Subscription')]"
      }
    },
    "subscriptionResults": {
      "type": "array",
      "copy": {
        "count": "[length(variables('effectiveSubscriptions'))]",
        "input": {
          "subscriptionId": "[variables('effectiveSubscriptions')[copyIndex()]]",
          "resourceGroup": "[concat('firefly-monitoring-', variables('effectiveSubscriptions')[copyIndex()])]",
          "deploymentName": "[concat('firefly-deployment-', copyIndex(), '-', parameters('newguid'))]",
          "status": "Deployed"
        }
      }
    }
  }
}